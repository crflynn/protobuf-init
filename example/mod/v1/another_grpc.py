# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: example/mod/v1/another.proto
# plugin: grpclib.plugin.main
import abc
import grpclib.client
import grpclib.const
import typing

if typing.TYPE_CHECKING:
    import grpclib.server

import example.mod.v1.another_pb2


class DummyServiceBase(abc.ABC):
    @abc.abstractmethod
    async def Dummy(
        self,
        stream: "grpclib.server.Stream[example.mod.v1.another_pb2.DummyMessage, example.mod.v1.another_pb2.DummyMessage]",
    ) -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            "/example.mod.v1.DummyService/Dummy": grpclib.const.Handler(
                self.Dummy,
                grpclib.const.Cardinality.UNARY_UNARY,
                example.mod.v1.another_pb2.DummyMessage,
                example.mod.v1.another_pb2.DummyMessage,
            ),
        }


class DummyServiceStub:
    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Dummy = grpclib.client.UnaryUnaryMethod(
            channel,
            "/example.mod.v1.DummyService/Dummy",
            example.mod.v1.another_pb2.DummyMessage,
            example.mod.v1.another_pb2.DummyMessage,
        )
